var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,2.05]],["body/coverage.html",[0,1.205,1,1.649,2,1.205,3,0.694,4,1.649,5,1.649,6,2.206,7,3.809,8,1.205,9,3.62,10,0.107,11,3.62,12,1.205,13,1.205,14,1.205,15,2.56,16,1.205,17,3.787,18,3.787,19,1.205,20,1.205,21,1.205,22,1.205,23,1.205,24,1.205,25,1.205,26,2.206,27,1.205,28,1.205,29,1.205,30,1.205,31,2.607,32,3.567,33,0.694,34,0.694,35,0.694,36,0.694,37,0.913,38,1.205,39,1.205,40,1.205,41,1.205,42,0.913,43,1.649,44,1.649,45,0.064,46,0.064]],["title/dependencies.html",[47,0.999,48,1.841]],["body/dependencies.html",[10,0.103,45,0.094,46,0.094,48,2.183,49,2.988,50,2.988,51,2.988,52,2.988]],["title/miscellaneous/functions.html",[53,0.41,54,1.394]],["body/miscellaneous/functions.html",[3,1.428,6,0.685,8,1.118,10,0.106,12,1.118,13,1.118,14,1.118,15,0.685,16,1.118,19,1.118,20,1.118,21,1.118,22,1.118,23,1.118,24,1.118,25,1.118,26,0.685,27,1.118,28,1.118,29,1.118,30,1.118,33,1.543,34,1.364,35,1.364,36,1.176,45,0.041,46,0.041,53,0.213,54,0.518,55,0.394,56,2.915,57,2.239,58,2.239,59,0.937,60,2.761,61,2.666,62,3.432,63,3.502,64,3.432,65,0.937,66,1.53,67,1.636,68,0.937,69,2.915,70,1.366,71,1.804,72,2.915,73,1.94,74,1.94,75,1.669,76,2.204,77,3.102,78,3.016,79,0.937,80,0.937,81,0.937,82,0.685,83,0.816,84,0.685,85,0.937,86,1.118,87,0.685,88,0.685,89,0.937,90,0.937,91,0.937,92,0.937,93,0.937,94,0.937,95,2.239,96,0.937,97,1.53,98,1.53,99,0.937,100,0.937,101,1.118,102,0.937,103,0.937,104,0.937,105,1.118,106,0.937,107,0.937,108,0.937,109,0.685,110,0.518,111,0.518,112,0.518,113,0.685,114,0.937,115,0.685,116,0.937,117,0.685,118,0.937,119,0.937,120,0.685,121,0.937,122,0.937,123,0.937]],["title/index.html",[55,0.76,124,1.805,125,1.805]],["body/index.html",[2,0.885,10,0.107,33,1.248,34,0.967,35,1.345,36,0.967,37,0.67,42,1.64,45,0.051,46,0.051,47,0.67,54,1.038,67,2.26,70,1.55,71,0.885,76,1.679,82,0.885,83,0.509,86,2.166,87,0.885,88,0.885,101,1.892,105,1.679,109,2.047,110,1.038,111,1.038,112,0.67,113,1.371,115,0.885,117,0.885,120,2.26,126,1.892,127,1.21,128,1.21,129,1.877,130,1.21,131,0.885,132,1.21,133,1.21,134,1.21,135,2.589,136,1.877,137,1.21,138,1.21,139,1.21,140,1.877,141,1.21,142,1.21,143,1.21,144,1.21,145,2.298,146,1.21,147,1.21,148,2.298,149,3.827,150,1.877,151,3.466,152,2.589,153,3.414,154,1.877,155,1.21,156,2.298,157,1.877,158,2.298,159,2.298,160,1.877,161,1.877,162,1.371,163,0.885,164,1.371,165,0.885,166,1.21,167,1.877,168,1.21,169,0.885,170,3.281,171,1.21,172,1.21,173,1.21,174,1.21,175,1.21,176,0.885,177,1.21,178,1.21,179,1.21,180,1.21,181,1.21,182,1.21,183,0.885,184,1.21,185,1.21,186,1.21,187,1.21,188,1.21,189,1.21,190,1.21,191,1.21]],["title/modules.html",[192,2.05]],["body/modules.html",[10,0.096,45,0.096,46,0.096,192,2.255]],["title/overview.html",[193,2.05]],["body/overview.html",[10,0.096,45,0.096,46,0.096,193,2.255]],["title/properties.html",[47,0.999,194,1.394]],["body/properties.html",[10,0.106,45,0.088,46,0.088,70,1.809,75,1.487,126,2.575,131,2.389,194,1.487,195,2.686,196,2.686,197,2.686,198,2.686,199,3.269,200,2.686,201,2.686,202,2.686,203,2.686,204,2.686,205,2.686]],["title/miscellaneous/typealiases.html",[53,0.41,206,2.52]],["body/miscellaneous/typealiases.html",[3,1.525,10,0.092,45,0.092,46,0.092,53,0.651,55,1.206,83,1.43,84,2.483,207,2.865,208,3.398,209,2.865,210,3.398]],["title/miscellaneous/variables.html",[53,0.41,211,1.841]],["body/miscellaneous/variables.html",[3,1.49,10,0.108,31,1.353,33,1.079,34,1.079,35,1.079,36,1.079,37,1.419,38,1.874,39,1.874,40,1.874,41,1.874,42,1.629,45,0.069,46,0.069,53,0.42,55,0.779,60,2.15,61,2.15,75,1.024,83,0.779,110,1.024,111,1.024,112,1.024,162,1.874,163,1.353,164,1.874,165,1.353,169,1.353,176,1.353,183,1.353,194,1.024,211,1.353,212,3.663,213,3.663,214,3.663,215,1.851,216,1.851,217,1.851,218,1.851,219,1.851,220,1.851,221,1.851,222,1.851,223,1.851,224,1.851,225,1.851,226,1.851,227,1.851,228,1.851,229,1.851,230,1.851,231,1.851]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":17,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":18,"title":{},"body":{"coverage.html":{}}}],["1.0.4",{"_index":196,"title":{},"body":{"properties.html":{}}}],["1.22.0",{"_index":50,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["113619241",{"_index":176,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["117345116",{"_index":183,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["117347664",{"_index":231,"title":{},"body":{"miscellaneous/variables.html":{}}}],["4.8.4",{"_index":52,"title":{},"body":{"dependencies.html":{}}}],["4001",{"_index":154,"title":{},"body":{"index.html":{}}}],["443",{"_index":164,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["69",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["8980",{"_index":157,"title":{},"body":{"index.html":{}}}],["aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa",{"_index":150,"title":{},"body":{"index.html":{}}}],["account",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["address",{"_index":33,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["address)get",{"_index":175,"title":{},"body":{"index.html":{}}}],["algodclient",{"_index":155,"title":{},"body":{"index.html":{}}}],["algodv2",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["algonode",{"_index":160,"title":{},"body":{"index.html":{}}}],["algorand",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"properties.html":{}}}],["algos",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["algosdk",{"_index":49,"title":{},"body":{"dependencies.html":{}}}],["algosdk.algodv2",{"_index":215,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algosdk.algodv2(token",{"_index":156,"title":{},"body":{"index.html":{}}}],["algosdk.indexer",{"_index":216,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algosdk.indexer(token",{"_index":159,"title":{},"body":{"index.html":{}}}],["aliases",{"_index":207,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["allows",{"_index":133,"title":{},"body":{"index.html":{}}}],["alot",{"_index":226,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amount",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["api.algonode.cloud",{"_index":163,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["arc",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["arc69",{"_index":218,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asa",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["asaid",{"_index":34,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["asjjdjdkadiasasjuaskasasxjksia",{"_index":230,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asset",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["assetid",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assetinfo",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":204,"title":{},"body":{"properties.html":{}}}],["await",{"_index":170,"title":{},"body":{"index.html":{}}}],["balance",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["balances",{"_index":134,"title":{},"body":{"index.html":{}}}],["blockchain",{"_index":131,"title":{},"body":{"index.html":{},"properties.html":{}}}],["boolean",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["bugs",{"_index":200,"title":{},"body":{"properties.html":{}}}],["check",{"_index":135,"title":{},"body":{"index.html":{}}}],["circulating",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["client",{"_index":35,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["compliant",{"_index":137,"title":{},"body":{"index.html":{}}}],["const",{"_index":149,"title":{},"body":{"index.html":{}}}],["coolness",{"_index":225,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["creation",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creator",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":213,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":48,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{}}}],["ernesthope.algo",{"_index":205,"title":{},"body":{"properties.html":{}}}],["external",{"_index":147,"title":{},"body":{"index.html":{}}}],["external_url",{"_index":222,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{},"index.html":{}}}],["findasset",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findasset(client",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{}}}],["free",{"_index":186,"title":{},"body":{"index.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":54,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["getaccountattribute",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getaccountattribute(account",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getanddecodenote",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getanddecodenote(txrecord",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getasabalance",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getasabalance(client",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getasacreationtx",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getasacreationtx(indexer",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getassetidbymetadatahash",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getassetidbymetadatahash(client",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getassetmetadata",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getassetmetadata(indexer",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getassets",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getassets(client",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getbalancealgos",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getbalancealgos(client",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getbalancemicroalgos",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getbalancemicroalgos(client",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcirculatingsupply",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcirculatingsupply(client",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcreatedassets",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcreatedassets(client",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getminbalance",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getminbalance(client",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getting",{"_index":124,"title":{"index.html":{}},"body":{}}],["gettokencirculatingsupply",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettokencirculatingsupply(client",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hash",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["holds",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{}}}],["homepage",{"_index":198,"title":{},"body":{"properties.html":{}}}],["http://localhost",{"_index":152,"title":{},"body":{"index.html":{}}}],["https://github.com/agrotokenlabs/algorand",{"_index":199,"title":{},"body":{"properties.html":{}}}],["https://testnet",{"_index":162,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["id",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["idx.algonode.cloud",{"_index":165,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["image/png",{"_index":221,"title":{},"body":{"miscellaneous/variables.html":{}}}],["import",{"_index":168,"title":{},"body":{"index.html":{}}}],["index",{"_index":55,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexer",{"_index":36,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["indexerclient",{"_index":158,"title":{},"body":{"index.html":{}}}],["install",{"_index":140,"title":{},"body":{"index.html":{}}}],["installing",{"_index":139,"title":{},"body":{"index.html":{}}}],["isoptin",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isoptin(client",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["issues",{"_index":187,"title":{},"body":{"index.html":{}}}],["key1",{"_index":223,"title":{},"body":{"miscellaneous/variables.html":{}}}],["keywords",{"_index":197,"title":{},"body":{"properties.html":{}}}],["kinda",{"_index":228,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":202,"title":{},"body":{"properties.html":{}}}],["literal",{"_index":210,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lookup",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lufrys56cgkwkfj62emyblvbryn2iiwsfna6jcvzqfh6i3363coeawlg5i",{"_index":229,"title":{},"body":{"miscellaneous/variables.html":{}}}],["make",{"_index":189,"title":{},"body":{"index.html":{}}}],["matching",{"_index":46,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["metadatahash",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miauness",{"_index":227,"title":{},"body":{"miscellaneous/variables.html":{}}}],["microalgos",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["mime_type",{"_index":220,"title":{},"body":{"miscellaneous/variables.html":{}}}],["min",{"_index":167,"title":{},"body":{"index.html":{}}}],["minimum",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":53,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":203,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":192,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["more",{"_index":138,"title":{},"body":{"index.html":{}}}],["name",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["necessaries",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":42,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nft",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["nftid",{"_index":37,"title":{},"body":{"coverage.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["nftid)feel",{"_index":185,"title":{},"body":{"index.html":{}}}],["nftmetadata",{"_index":38,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nonbaladdress",{"_index":39,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nonvalidaddress",{"_index":40,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["npm",{"_index":141,"title":{},"body":{"index.html":{}}}],["number",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":217,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["opt",{"_index":136,"title":{},"body":{"index.html":{}}}],["opted",{"_index":179,"title":{},"body":{"index.html":{}}}],["optinstate",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":193,"title":{"overview.html":{}},"body":{"overview.html":{}}}],["package",{"_index":47,"title":{"dependencies.html":{},"properties.html":{}},"body":{"index.html":{}}}],["parameters",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["port",{"_index":153,"title":{},"body":{"index.html":{}}}],["port)examples",{"_index":166,"title":{},"body":{"index.html":{}}}],["pr",{"_index":188,"title":{},"body":{"index.html":{}}}],["promise",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":194,"title":{"properties.html":{}},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["provider",{"_index":148,"title":{},"body":{"index.html":{}}}],["provides",{"_index":128,"title":{},"body":{"index.html":{}}}],["read",{"_index":130,"title":{},"body":{"index.html":{}}}],["reader",{"_index":126,"title":{},"body":{"index.html":{},"properties.html":{}}}],["reader.getasabalance(client",{"_index":178,"title":{},"body":{"index.html":{}}}],["reader.getassetmetadata(indexerclient",{"_index":184,"title":{},"body":{"index.html":{}}}],["reader.getbalancealgos(client",{"_index":172,"title":{},"body":{"index.html":{}}}],["reader.getbalancemicroalgos(client",{"_index":173,"title":{},"body":{"index.html":{}}}],["reader.getcreatedassets(client",{"_index":177,"title":{},"body":{"index.html":{}}}],["reader.getminbalance(client",{"_index":174,"title":{},"body":{"index.html":{}}}],["reader.gettokencirculatingsupply(client",{"_index":181,"title":{},"body":{"index.html":{}}}],["reader.isoptin(client",{"_index":180,"title":{},"body":{"index.html":{}}}],["reader.validateaddress(address",{"_index":171,"title":{},"body":{"index.html":{}}}],["reader/issues",{"_index":201,"title":{},"body":{"properties.html":{}}}],["readerrequisites",{"_index":142,"title":{},"body":{"index.html":{}}}],["receive",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{}}}],["record",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":45,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"overview.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sandbox",{"_index":145,"title":{},"body":{"index.html":{}}}],["server",{"_index":151,"title":{},"body":{"index.html":{}}}],["set",{"_index":129,"title":{},"body":{"index.html":{}}}],["src/.../accounts.ts",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../assets.ts",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../metadata.ts",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../testconfig.ts",{"_index":212,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":208,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/modules/accounts.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/assets.ts",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/common/types.ts",{"_index":209,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/modules/metadata.ts",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/test/testconfig.ts",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standar",{"_index":219,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standard",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{},"miscellaneous/variables.html":{}}}],["started",{"_index":125,"title":{"index.html":{}},"body":{}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["status",{"_index":132,"title":{},"body":{"index.html":{}}}],["stored",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["suggestions",{"_index":190,"title":{},"body":{"index.html":{}}}],["supply",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["sxpxegtvzbiu56ndzc6ha3hzvhad7csyecq2rikylmb6kog43k7ubrgfpi",{"_index":169,"title":{},"body":{"index.html":{},"miscellaneous/variables.html":{}}}],["table",{"_index":44,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":43,"title":{},"body":{"coverage.html":{}}}],["testid",{"_index":41,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["testid)get",{"_index":182,"title":{},"body":{"index.html":{}}}],["testnet",{"_index":161,"title":{},"body":{"index.html":{}}}],["thanks",{"_index":191,"title":{},"body":{"index.html":{}}}],["token",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["true",{"_index":123,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tx",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{}}}],["txrecord",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":206,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["typescript",{"_index":51,"title":{},"body":{"dependencies.html":{}}}],["up",{"_index":144,"title":{},"body":{"index.html":{}}}],["use",{"_index":146,"title":{},"body":{"index.html":{}}}],["uses",{"_index":143,"title":{},"body":{"index.html":{}}}],["using",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["v1.0.4",{"_index":127,"title":{},"body":{"index.html":{}}}],["valid",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{},"index.html":{}}}],["validateaddress",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateaddress(address",{"_index":122,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":214,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value1",{"_index":224,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":32,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":211,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":195,"title":{},"body":{"properties.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/modules/accounts.ts\n            \n            function\n            getBalanceAlgos\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/accounts.ts\n            \n            function\n            getBalanceMicroalgos\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/accounts.ts\n            \n            function\n            getMinBalance\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/accounts.ts\n            \n            function\n            validateAddress\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            findAsset\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getAccountAttribute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getAsaBalance\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getAssets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getCirculatingSupply\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getCreatedAssets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getTokenCirculatingSupply\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            isOptIn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/metadata.ts\n            \n            function\n            getAndDecodeNote\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/metadata.ts\n            \n            function\n            getAsaCreationTx\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/metadata.ts\n            \n            function\n            getAssetIdByMetadataHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/metadata.ts\n            \n            function\n            getAssetMetadata\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            asaId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            indexer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            nftId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            nftMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            nonBalAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            nonValidAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            testId\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            algosdk : ^1.22.0\n        \n            typescript : ^4.8.4\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            findAsset   (src/.../assets.ts)\n                        \n                        \n                            getAccountAttribute   (src/.../assets.ts)\n                        \n                        \n                            getAndDecodeNote   (src/.../metadata.ts)\n                        \n                        \n                            getAsaBalance   (src/.../assets.ts)\n                        \n                        \n                            getAsaCreationTx   (src/.../metadata.ts)\n                        \n                        \n                            getAssetIdByMetadataHash   (src/.../metadata.ts)\n                        \n                        \n                            getAssetMetadata   (src/.../metadata.ts)\n                        \n                        \n                            getAssets   (src/.../assets.ts)\n                        \n                        \n                            getBalanceAlgos   (src/.../accounts.ts)\n                        \n                        \n                            getBalanceMicroalgos   (src/.../accounts.ts)\n                        \n                        \n                            getCirculatingSupply   (src/.../assets.ts)\n                        \n                        \n                            getCreatedAssets   (src/.../assets.ts)\n                        \n                        \n                            getMinBalance   (src/.../accounts.ts)\n                        \n                        \n                            getTokenCirculatingSupply   (src/.../assets.ts)\n                        \n                        \n                            isOptIn   (src/.../assets.ts)\n                        \n                        \n                            validateAddress   (src/.../accounts.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/assets.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findAsset\n                        \n                    \n                \n            \n            \n                \nfindAsset(client, address: string, asaId: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    asaId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAccountAttribute\n                        \n                    \n                \n            \n            \n                \ngetAccountAttribute(account: Record, name: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsaBalance\n                        \n                    \n                \n            \n            \n                \ngetAsaBalance(client, address: string, asaId: number)\n                \n            \n\n\n\n\n            \n                \n                    Receive a algorand valid address and asaId then return the amount that account holds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                                \n                                    asaId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAssets\n                        \n                    \n                \n            \n            \n                \ngetAssets(client, address: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCirculatingSupply\n                        \n                    \n                \n            \n            \n                \ngetCirculatingSupply(client, asaId: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    asaId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCreatedAssets\n                        \n                    \n                \n            \n            \n                \ngetCreatedAssets(client, address: string)\n                \n            \n\n\n\n\n            \n                \n                    Receive a client and address, return all the created asset by that address\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : AssetInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTokenCirculatingSupply\n                        \n                    \n                \n            \n            \n                \ngetTokenCirculatingSupply(client, asaId: number)\n                \n            \n\n\n\n\n            \n                \n                    Receive a token return the circulating supply of the token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    asaId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOptIn\n                        \n                    \n                \n            \n            \n                \nisOptIn(client, address: string, asaId: number)\n                \n            \n\n\n\n\n            \n                \n                    Receive a algorand valid address and asaId then return the optInState\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                                \n                                    asaId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : boolean\n\n                    \n                \n            \n        \n    \n    src/modules/metadata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAndDecodeNote\n                        \n                    \n                \n            \n            \n                \ngetAndDecodeNote(txRecord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    txRecord\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsaCreationTx\n                        \n                    \n                \n            \n            \n                \ngetAsaCreationTx(indexer: Indexer, assetId: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    indexer\n                                    \n                                            Indexer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    assetId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAssetIdByMetadataHash\n                        \n                    \n                \n            \n            \n                \ngetAssetIdByMetadataHash(client: Algodv2, hash: string, creator: string)\n                \n            \n\n\n\n\n            \n                \n                    Lookup an asset id using the metadataHash if the asset have one\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Algodv2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hash\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAssetMetadata\n                        \n                    \n                \n            \n            \n                \ngetAssetMetadata(indexer: Indexer, assetId: number)\n                \n            \n\n\n\n\n            \n                \n                    Returns the metadata stored in the creation tx of an asa\nUsing the ARC-69 standard for NFT metadata.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    indexer\n                                    \n                                            Indexer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Indexer\n\n                                    \n                                \n                                \n                                    assetId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : string\n\n                    \n                \n            \n        \n    \n    src/modules/accounts.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getBalanceAlgos\n                        \n                    \n                \n            \n            \n                \ngetBalanceAlgos(client, address: string)\n                \n            \n\n\n\n\n            \n                \n                    Receive a algorand valid address and return the amount of algos that account holds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalanceMicroalgos\n                        \n                    \n                \n            \n            \n                \ngetBalanceMicroalgos(client, address: string)\n                \n            \n\n\n\n\n            \n                \n                    Receive a algorand valid address and return the amount of microalgos that account holds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinBalance\n                        \n                    \n                \n            \n            \n                \ngetMinBalance(client, address: string)\n                \n            \n\n\n\n\n            \n                \n                    Receive an address and return the minimum balance necessaries\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAddress\n                        \n                    \n                \n            \n            \n                \nvalidateAddress(address: string)\n                \n            \n\n\n\n\n            \n                \n                    Receive an string, return true if it is a valid Algorand address\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"getting-started - index","body":"\n                   \n\nAlgorand Reader v1.0.4\nAlgorand reader provides a set of functions to read the Algorand blockchain status.\nIt allows to get balances, check opt-in, get nft metadata ARC-69 compliant and more.\nInstalling\nInstall the package\nnpm install algorand-readerRequisites\nMost of the functions uses an Algodv2 client and an Indexer client, you could set up a sandbox or use an external provider.\n// Algodv2 client using sandbox\nconst token = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\nconst server = 'http://localhost'\nconst port = 4001\nconst algodClient = new algosdk.Algodv2(token, server, port)\n\n// Indexer client using sandbox\nconst token = ''\nconst server = 'http://localhost'\nconst port = 8980\nconst indexerClient = new algosdk.Indexer(token, server, port)\n\n// Algodv2 client using a provider like AlgoNode on testnet\nconst token = ''\nconst server = 'https://testnet-api.algonode.cloud'\nconst port = 443\nconst client = new algosdk.Algodv2(token, server, port)\n\n// Indexer client using a provider like AlgoNode on testnet\nconst token = ''\nconst server = 'https://testnet-idx.algonode.cloud'\nconst port = 443\nconst indexerClient = new algosdk.Indexer(token, server, port)Examples\nGet account balance and min balance\nimport * as reader from 'algorand-reader'\n\nconst address = 'SXPXEGTVZBIU56NDZC6HA3HZVHAD7CSYECQ2RIKYLMB6KOG43K7UBRGFPI'\n\nconst token = 'aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'\nconst server = 'http://localhost'\nconst port = 4001\nconst client = new algosdk.Algodv2(token, server, port)\n\n// Check if an account is valid\nawait reader.validateAddress(address)\n\n// Get balance in algos\nawait reader.getBalanceAlgos(client, address)\n\n// Get balance in microalgos\nawait reader.getBalanceMicroalgos(client, address)\n\n// Get min balance\nawait reader.getMinBalance(client, address)Get asa account balance and check if the account is opt-in\nconst asaId = 113619241\n\n// Get created asset by an account\nawait reader.getCreatedAssets(client, address)\n\n// Get asa balance from an account\nawait reader.getAsaBalance(client, address, asaId)\n\n// Check if the account is opted-in to an asa\nawait reader.isOptIn(client, address, asaId)\n\n// Get circulating supply of an asa\nawait reader.getTokenCirculatingSupply(client, testId)Get metadata from an asa with ARC-69 standard\nconst token = ''\nconst server = 'http://localhost'\nconst port = 8980\nconst indexerClient = new algosdk.Indexer(token, server, port)\n\nconst nftId = 117345116\n\n// Get metadata from the NFT\nawait reader.getAssetMetadata(indexerClient, nftId)Feel free to file issues, PR and make suggestions, Thanks! 🚀\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"overview.html":{"url":"overview.html","title":"overview - overview","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.4\n        \n            Description : An algorand reader for blockchain\n        \n            Keywords : algorand, blockchain, reader\n        \n            Homepage : https://github.com/agrotokenlabs/algorand-reader\n        \n            Bugs : https://github.com/agrotokenlabs/algorand-reader/issues\n        \n            License : MIT\n        \n            Author : ernesthope.algo\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Asset   (src/.../types.ts)\n                        \n                        \n                            AssetInfo   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/common/types.ts\n    \n    \n        \n            \n                \n                    \n                    Asset\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AssetInfo\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            address   (src/.../testConfig.ts)\n                        \n                        \n                            asaId   (src/.../testConfig.ts)\n                        \n                        \n                            client   (src/.../testConfig.ts)\n                        \n                        \n                            indexer   (src/.../testConfig.ts)\n                        \n                        \n                            nftId   (src/.../testConfig.ts)\n                        \n                        \n                            nftMetadata   (src/.../testConfig.ts)\n                        \n                        \n                            nonBalAddress   (src/.../testConfig.ts)\n                        \n                        \n                            nonValidAddress   (src/.../testConfig.ts)\n                        \n                        \n                            testId   (src/.../testConfig.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test/testConfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SXPXEGTVZBIU56NDZC6HA3HZVHAD7CSYECQ2RIKYLMB6KOG43K7UBRGFPI'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        asaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 113619241\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new algosdk.Algodv2(\n  '',\n  'https://testnet-api.algonode.cloud',\n  '443'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        indexer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new algosdk.Indexer(\n  '',\n  'https://testnet-idx.algonode.cloud',\n  '443'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 117345116\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  standard: 'arc69',\n  description: 'This is a new asset with ARC-69 standar',\n  mime_type: 'image/png',\n  external_url: '',\n  properties: { Key1: 'Value1', Coolness: 'Alot', Miauness: 'Kinda' },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nonBalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'LUFRYS56CGKWKFJ62EMYBLVBRYN2IIWSFNA6JCVZQFH6I3363COEAWLG5I'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nonValidAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ASJJDJDKADIASASJUASKASASXJKSIA'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 117347664\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
