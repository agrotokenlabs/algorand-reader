var COMPODOC_SEARCH_INDEX = {
    "index": {"version":"2.3.9","fields":["title","body"],"fieldVectors":[["title/coverage.html",[0,1.888]],["body/coverage.html",[0,1.009,1,1.412,2,1.412,3,0.546,4,1.412,5,1.412,6,1.946,7,3.545,8,1.009,9,3.343,10,0.118,11,3.343,12,1.009,13,1.009,14,1.009,15,2.302,16,1.009,17,3.521,18,3.521,19,1.009,20,1.009,21,1.009,22,1.009,23,1.009,24,1.009,25,1.009,26,1.946,27,1.009,28,1.009,29,1.009,30,1.009,31,2.35,32,3.287,33,0.744,34,0.744,35,0.744,36,0.744,37,1.009,38,1.009,39,1.009,40,1.009,41,1.009,42,1.009,43,1.412,44,1.412,45,0.066,46,0.066]],["title/dependencies.html",[47,1.21,48,1.693]],["body/dependencies.html",[10,0.111,45,0.105,46,0.105,48,2.027,49,2.835,50,2.835]],["title/miscellaneous/functions.html",[51,0.307,52,1.693]],["body/miscellaneous/functions.html",[3,1.188,6,0.536,8,0.901,10,0.117,12,0.901,13,0.901,14,0.901,15,0.536,16,0.901,19,0.901,20,0.901,21,0.901,22,0.901,23,0.901,24,0.901,25,0.901,26,0.536,27,0.901,28,0.901,29,0.901,30,0.901,33,1.776,34,1.534,35,1.534,36,1.293,45,0.04,46,0.04,51,0.136,52,0.536,53,0.29,54,2.574,55,1.911,56,1.911,57,0.75,58,3.327,59,2.496,60,2.394,61,3.114,62,3.189,63,3.114,64,0.75,65,1.261,66,1.911,67,0.75,68,2.574,69,1.523,70,2.13,71,2.574,72,1.63,73,1.63,74,1.411,75,2.766,76,2.677,77,0.75,78,0.75,79,0.75,80,0.75,81,0.859,82,0.536,83,0.75,84,1.261,85,0.75,86,0.75,87,0.75,88,0.75,89,0.75,90,0.75,91,0.75,92,0.75,93,1.911,94,0.75,95,1.261,96,1.261,97,0.75,98,0.75,99,1.261,100,0.75,101,0.75,102,0.75,103,1.261,104,0.75,105,0.75,106,0.75,107,0.75,108,0.536,109,0.536,110,0.536,111,0.75,112,0.75,113,0.75,114,0.75,115,0.75,116,0.75,117,0.75,118,0.75,119,0.75,120,0.75,121,0.75]],["title/index.html",[53,0.768,122,1.419]],["body/index.html",[10,0.106,45,0.106,46,0.106,122,2.067]],["title/modules.html",[123,1.888]],["body/modules.html",[10,0.106,45,0.106,46,0.106,123,2.067]],["title/properties.html",[47,1.21,124,1.248]],["body/properties.html",[10,0.116,45,0.101,46,0.101,69,1.891,74,1.395,124,1.395,125,2.646,126,2.646,127,2.646,128,2.646,129,2.646,130,2.646,131,2.646,132,2.646]],["title/miscellaneous/typealiases.html",[51,0.307,133,2.369]],["body/miscellaneous/typealiases.html",[3,1.311,10,0.101,45,0.101,46,0.101,51,0.481,53,1.023,81,1.669,82,2.264,134,2.646,135,3.166,136,2.646,137,3.166]],["title/miscellaneous/variables.html",[51,0.307,138,1.693]],["body/miscellaneous/variables.html",[3,1.262,10,0.119,31,1.147,33,1.202,34,1.202,35,1.202,36,1.202,37,1.63,38,1.63,39,1.63,40,1.63,41,1.63,42,1.896,45,0.073,46,0.073,51,0.291,53,0.62,59,1.896,60,1.896,74,0.845,81,0.845,108,1.147,109,1.147,110,1.147,124,0.845,138,1.147,139,3.392,140,3.392,141,3.392,142,1.604,143,1.604,144,1.604,145,2.28,146,1.604,147,2.28,148,1.604,149,1.604,150,1.604,151,1.604,152,1.604,153,1.604,154,1.604,155,1.604,156,1.604,157,1.604,158,1.604,159,1.604,160,1.604,161,1.604,162,1.604,163,1.604,164,1.604,165,1.604]]],"invertedIndex":[["",{"_index":10,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["0",{"_index":17,"title":{},"body":{"coverage.html":{}}}],["0/1",{"_index":18,"title":{},"body":{"coverage.html":{}}}],["1.0.0",{"_index":126,"title":{},"body":{"properties.html":{}}}],["1.22.0",{"_index":50,"title":{},"body":{"dependencies.html":{}}}],["1/1",{"_index":11,"title":{},"body":{"coverage.html":{}}}],["100",{"_index":9,"title":{},"body":{"coverage.html":{}}}],["113619241",{"_index":143,"title":{},"body":{"miscellaneous/variables.html":{}}}],["117345116",{"_index":150,"title":{},"body":{"miscellaneous/variables.html":{}}}],["117347664",{"_index":165,"title":{},"body":{"miscellaneous/variables.html":{}}}],["443",{"_index":147,"title":{},"body":{"miscellaneous/variables.html":{}}}],["69",{"_index":109,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["account",{"_index":66,"title":{},"body":{"miscellaneous/functions.html":{}}}],["address",{"_index":33,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["algodv2",{"_index":58,"title":{},"body":{"miscellaneous/functions.html":{}}}],["algorand",{"_index":69,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{}}}],["algos",{"_index":113,"title":{},"body":{"miscellaneous/functions.html":{}}}],["algosdk",{"_index":49,"title":{},"body":{"dependencies.html":{}}}],["algosdk.algodv2",{"_index":144,"title":{},"body":{"miscellaneous/variables.html":{}}}],["algosdk.indexer",{"_index":148,"title":{},"body":{"miscellaneous/variables.html":{}}}],["aliases",{"_index":134,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["alot",{"_index":160,"title":{},"body":{"miscellaneous/variables.html":{}}}],["amount",{"_index":72,"title":{},"body":{"miscellaneous/functions.html":{}}}],["api.algonode.cloud",{"_index":146,"title":{},"body":{"miscellaneous/variables.html":{}}}],["arc",{"_index":108,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["arc69",{"_index":152,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asa",{"_index":107,"title":{},"body":{"miscellaneous/functions.html":{}}}],["asaid",{"_index":34,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["asjjdjdkadiasasjuaskasasxjksia",{"_index":164,"title":{},"body":{"miscellaneous/variables.html":{}}}],["asset",{"_index":81,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["assetid",{"_index":93,"title":{},"body":{"miscellaneous/functions.html":{}}}],["assetinfo",{"_index":82,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{}}}],["author",{"_index":131,"title":{},"body":{"properties.html":{}}}],["balance",{"_index":118,"title":{},"body":{"miscellaneous/functions.html":{}}}],["blockchain",{"_index":128,"title":{},"body":{"properties.html":{}}}],["boolean",{"_index":89,"title":{},"body":{"miscellaneous/functions.html":{}}}],["circulating",{"_index":85,"title":{},"body":{"miscellaneous/functions.html":{}}}],["client",{"_index":35,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["coolness",{"_index":159,"title":{},"body":{"miscellaneous/variables.html":{}}}],["coverage",{"_index":0,"title":{"coverage.html":{}},"body":{"coverage.html":{}}}],["created",{"_index":80,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creation",{"_index":105,"title":{},"body":{"miscellaneous/functions.html":{}}}],["creator",{"_index":96,"title":{},"body":{"miscellaneous/functions.html":{}}}],["default",{"_index":140,"title":{},"body":{"miscellaneous/variables.html":{}}}],["dependencies",{"_index":48,"title":{"dependencies.html":{}},"body":{"dependencies.html":{}}}],["description",{"_index":74,"title":{},"body":{"miscellaneous/functions.html":{},"properties.html":{},"miscellaneous/variables.html":{}}}],["documentation",{"_index":1,"title":{},"body":{"coverage.html":{}}}],["ernesthope.algo",{"_index":132,"title":{},"body":{"properties.html":{}}}],["external_url",{"_index":156,"title":{},"body":{"miscellaneous/variables.html":{}}}],["file",{"_index":2,"title":{},"body":{"coverage.html":{}}}],["findasset",{"_index":16,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["findasset(client",{"_index":57,"title":{},"body":{"miscellaneous/functions.html":{}}}],["function",{"_index":7,"title":{},"body":{"coverage.html":{}}}],["functions",{"_index":52,"title":{"miscellaneous/functions.html":{}},"body":{"miscellaneous/functions.html":{}}}],["getaccountattribute",{"_index":19,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getaccountattribute(account",{"_index":64,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getanddecodenote",{"_index":27,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getanddecodenote(txrecord",{"_index":90,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getasabalance",{"_index":20,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getasabalance(client",{"_index":67,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getasacreationtx",{"_index":28,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getasacreationtx(indexer",{"_index":92,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getassetidbymetadatahash",{"_index":29,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getassetidbymetadatahash(client",{"_index":94,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getassetmetadata",{"_index":30,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getassetmetadata(indexer",{"_index":102,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getassets",{"_index":21,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getassets(client",{"_index":77,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getbalancealgos",{"_index":8,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getbalancealgos(client",{"_index":112,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getbalancemicroalgos",{"_index":12,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getbalancemicroalgos(client",{"_index":114,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcirculatingsupply",{"_index":22,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcirculatingsupply(client",{"_index":78,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getcreatedassets",{"_index":23,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getcreatedassets(client",{"_index":79,"title":{},"body":{"miscellaneous/functions.html":{}}}],["getminbalance",{"_index":13,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["getminbalance(client",{"_index":116,"title":{},"body":{"miscellaneous/functions.html":{}}}],["gettokencirculatingsupply",{"_index":24,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["gettokencirculatingsupply(client",{"_index":83,"title":{},"body":{"miscellaneous/functions.html":{}}}],["hashkey",{"_index":95,"title":{},"body":{"miscellaneous/functions.html":{}}}],["holds",{"_index":73,"title":{},"body":{"miscellaneous/functions.html":{}}}],["https://testnet",{"_index":145,"title":{},"body":{"miscellaneous/variables.html":{}}}],["id",{"_index":98,"title":{},"body":{"miscellaneous/functions.html":{}}}],["identifier",{"_index":4,"title":{},"body":{"coverage.html":{}}}],["idx.algonode.cloud",{"_index":149,"title":{},"body":{"miscellaneous/variables.html":{}}}],["image/png",{"_index":155,"title":{},"body":{"miscellaneous/variables.html":{}}}],["index",{"_index":53,"title":{"index.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["indexer",{"_index":36,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["isoptin",{"_index":25,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["isoptin(client",{"_index":87,"title":{},"body":{"miscellaneous/functions.html":{}}}],["key1",{"_index":157,"title":{},"body":{"miscellaneous/variables.html":{}}}],["kinda",{"_index":162,"title":{},"body":{"miscellaneous/variables.html":{}}}],["license",{"_index":129,"title":{},"body":{"properties.html":{}}}],["literal",{"_index":137,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["lookup",{"_index":97,"title":{},"body":{"miscellaneous/functions.html":{}}}],["lufrys56cgkwkfj62emyblvbryn2iiwsfna6jcvzqfh6i3363coeawlg5i",{"_index":163,"title":{},"body":{"miscellaneous/variables.html":{}}}],["matching",{"_index":46,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["metadata",{"_index":103,"title":{},"body":{"miscellaneous/functions.html":{}}}],["metadatahash",{"_index":100,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miauness",{"_index":161,"title":{},"body":{"miscellaneous/variables.html":{}}}],["microalgos",{"_index":115,"title":{},"body":{"miscellaneous/functions.html":{}}}],["mime_type",{"_index":154,"title":{},"body":{"miscellaneous/variables.html":{}}}],["minimum",{"_index":117,"title":{},"body":{"miscellaneous/functions.html":{}}}],["miscellaneous",{"_index":51,"title":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}},"body":{"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["mit",{"_index":130,"title":{},"body":{"properties.html":{}}}],["modules",{"_index":123,"title":{"modules.html":{}},"body":{"modules.html":{}}}],["name",{"_index":62,"title":{},"body":{"miscellaneous/functions.html":{}}}],["necessaries",{"_index":119,"title":{},"body":{"miscellaneous/functions.html":{}}}],["new",{"_index":42,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nft",{"_index":111,"title":{},"body":{"miscellaneous/functions.html":{}}}],["nftid",{"_index":37,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nftmetadata",{"_index":38,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nonbaladdress",{"_index":39,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["nonvalidaddress",{"_index":40,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["number",{"_index":60,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["object",{"_index":151,"title":{},"body":{"miscellaneous/variables.html":{}}}],["one",{"_index":101,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optinstate",{"_index":88,"title":{},"body":{"miscellaneous/functions.html":{}}}],["optional",{"_index":63,"title":{},"body":{"miscellaneous/functions.html":{}}}],["overview",{"_index":122,"title":{"index.html":{}},"body":{"index.html":{}}}],["package",{"_index":47,"title":{"dependencies.html":{},"properties.html":{}},"body":{}}],["parameters",{"_index":61,"title":{},"body":{"miscellaneous/functions.html":{}}}],["promise",{"_index":76,"title":{},"body":{"miscellaneous/functions.html":{}}}],["properties",{"_index":124,"title":{"properties.html":{}},"body":{"properties.html":{},"miscellaneous/variables.html":{}}}],["reader",{"_index":127,"title":{},"body":{"properties.html":{}}}],["receive",{"_index":68,"title":{},"body":{"miscellaneous/functions.html":{}}}],["record",{"_index":65,"title":{},"body":{"miscellaneous/functions.html":{}}}],["results",{"_index":45,"title":{},"body":{"coverage.html":{},"dependencies.html":{},"miscellaneous/functions.html":{},"index.html":{},"modules.html":{},"properties.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["return",{"_index":71,"title":{},"body":{"miscellaneous/functions.html":{}}}],["returns",{"_index":75,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../accounts.ts",{"_index":56,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../assets.ts",{"_index":54,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../metadata.ts",{"_index":55,"title":{},"body":{"miscellaneous/functions.html":{}}}],["src/.../testconfig.ts",{"_index":139,"title":{},"body":{"miscellaneous/variables.html":{}}}],["src/.../types.ts",{"_index":135,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/modules/accounts.ts",{"_index":6,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/assets.ts",{"_index":15,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/modules/common/types.ts",{"_index":136,"title":{},"body":{"miscellaneous/typealiases.html":{}}}],["src/modules/metadata.ts",{"_index":26,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["src/test/testconfig.ts",{"_index":31,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["standar",{"_index":153,"title":{},"body":{"miscellaneous/variables.html":{}}}],["standard",{"_index":110,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["statements",{"_index":5,"title":{},"body":{"coverage.html":{}}}],["stored",{"_index":104,"title":{},"body":{"miscellaneous/functions.html":{}}}],["string",{"_index":59,"title":{},"body":{"miscellaneous/functions.html":{},"miscellaneous/variables.html":{}}}],["supply",{"_index":86,"title":{},"body":{"miscellaneous/functions.html":{}}}],["sxpxegtvzbiu56ndzc6ha3hzvhad7csyecq2rikylmb6kog43k7ubrgfpi",{"_index":142,"title":{},"body":{"miscellaneous/variables.html":{}}}],["table",{"_index":44,"title":{},"body":{"coverage.html":{}}}],["tablesort(document.getelementbyid('coverage",{"_index":43,"title":{},"body":{"coverage.html":{}}}],["testid",{"_index":41,"title":{},"body":{"coverage.html":{},"miscellaneous/variables.html":{}}}],["token",{"_index":84,"title":{},"body":{"miscellaneous/functions.html":{}}}],["true",{"_index":121,"title":{},"body":{"miscellaneous/functions.html":{}}}],["tx",{"_index":106,"title":{},"body":{"miscellaneous/functions.html":{}}}],["txrecord",{"_index":91,"title":{},"body":{"miscellaneous/functions.html":{}}}],["type",{"_index":3,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{},"miscellaneous/typealiases.html":{},"miscellaneous/variables.html":{}}}],["typealiases",{"_index":133,"title":{"miscellaneous/typealiases.html":{}},"body":{}}],["using",{"_index":99,"title":{},"body":{"miscellaneous/functions.html":{}}}],["valid",{"_index":70,"title":{},"body":{"miscellaneous/functions.html":{}}}],["validateaddress",{"_index":14,"title":{},"body":{"coverage.html":{},"miscellaneous/functions.html":{}}}],["validateaddress(address",{"_index":120,"title":{},"body":{"miscellaneous/functions.html":{}}}],["value",{"_index":141,"title":{},"body":{"miscellaneous/variables.html":{}}}],["value1",{"_index":158,"title":{},"body":{"miscellaneous/variables.html":{}}}],["variable",{"_index":32,"title":{},"body":{"coverage.html":{}}}],["variables",{"_index":138,"title":{"miscellaneous/variables.html":{}},"body":{"miscellaneous/variables.html":{}}}],["version",{"_index":125,"title":{},"body":{"properties.html":{}}}]],"pipeline":["stemmer"]},
    "store": {"coverage.html":{"url":"coverage.html","title":"coverage - coverage","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    Documentation coverage\n\n\n\n    \n\n\n\n    \n        \n            File\n            Type\n            Identifier\n            Statements\n        \n    \n    \n        \n            \n                \n                src/modules/accounts.ts\n            \n            function\n            getBalanceAlgos\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/accounts.ts\n            \n            function\n            getBalanceMicroalgos\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/accounts.ts\n            \n            function\n            getMinBalance\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/accounts.ts\n            \n            function\n            validateAddress\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            findAsset\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getAccountAttribute\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getAsaBalance\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getAssets\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getCirculatingSupply\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getCreatedAssets\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            getTokenCirculatingSupply\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/assets.ts\n            \n            function\n            isOptIn\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/metadata.ts\n            \n            function\n            getAndDecodeNote\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/metadata.ts\n            \n            function\n            getAsaCreationTx\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/modules/metadata.ts\n            \n            function\n            getAssetIdByMetadataHash\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/modules/metadata.ts\n            \n            function\n            getAssetMetadata\n            \n                100 %\n                (1/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            address\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            asaId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            client\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            indexer\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            nftId\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            nftMetadata\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            nonBalAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            nonValidAddress\n            \n                0 %\n                (0/1)\n            \n        \n        \n            \n                \n                src/test/testConfig.ts\n            \n            variable\n            testId\n            \n                0 %\n                (0/1)\n            \n        \n    \n\n\n\n\n\n    new Tablesort(document.getElementById('coverage-table'));\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"dependencies.html":{"url":"dependencies.html","title":"package-dependencies - dependencies","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Dependencies\n    \n    \n        \n            algosdk : ^1.22.0\n    \n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/functions.html":{"url":"miscellaneous/functions.html","title":"miscellaneous-functions - functions","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Functions\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            findAsset   (src/.../assets.ts)\n                        \n                        \n                            getAccountAttribute   (src/.../assets.ts)\n                        \n                        \n                            getAndDecodeNote   (src/.../metadata.ts)\n                        \n                        \n                            getAsaBalance   (src/.../assets.ts)\n                        \n                        \n                            getAsaCreationTx   (src/.../metadata.ts)\n                        \n                        \n                            getAssetIdByMetadataHash   (src/.../metadata.ts)\n                        \n                        \n                            getAssetMetadata   (src/.../metadata.ts)\n                        \n                        \n                            getAssets   (src/.../assets.ts)\n                        \n                        \n                            getBalanceAlgos   (src/.../accounts.ts)\n                        \n                        \n                            getBalanceMicroalgos   (src/.../accounts.ts)\n                        \n                        \n                            getCirculatingSupply   (src/.../assets.ts)\n                        \n                        \n                            getCreatedAssets   (src/.../assets.ts)\n                        \n                        \n                            getMinBalance   (src/.../accounts.ts)\n                        \n                        \n                            getTokenCirculatingSupply   (src/.../assets.ts)\n                        \n                        \n                            isOptIn   (src/.../assets.ts)\n                        \n                        \n                            validateAddress   (src/.../accounts.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/assets.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        findAsset\n                        \n                    \n                \n            \n            \n                \nfindAsset(client: Algodv2, address: string, asaId: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Algodv2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    asaId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAccountAttribute\n                        \n                    \n                \n            \n            \n                \ngetAccountAttribute(account: Record, name: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    account\n                                    \n                                            Record\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    name\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsaBalance\n                        \n                    \n                \n            \n            \n                \ngetAsaBalance(client: Algodv2, address: string, asaId: number)\n                \n            \n\n\n\n\n            \n                \n                    Receive a algorand valid address and asaId then return the amount that account holds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Algodv2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                                \n                                    asaId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAssets\n                        \n                    \n                \n            \n            \n                \ngetAssets(client: Algodv2, address: string)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Algodv2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCirculatingSupply\n                        \n                    \n                \n            \n            \n                \ngetCirculatingSupply(client: Algodv2, asaId: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Algodv2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    asaId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getCreatedAssets\n                        \n                    \n                \n            \n            \n                \ngetCreatedAssets(client: Algodv2, address: string)\n                \n            \n\n\n\n\n            \n                \n                    Receive a client and address, return all the created asset by that address\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Algodv2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : AssetInfo[]\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getTokenCirculatingSupply\n                        \n                    \n                \n            \n            \n                \ngetTokenCirculatingSupply(client: Algodv2, asaId: number)\n                \n            \n\n\n\n\n            \n                \n                    Receive a token return the circulating supply of the token\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Algodv2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    asaId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        isOptIn\n                        \n                    \n                \n            \n            \n                \nisOptIn(client: Algodv2, address: string, asaId: number)\n                \n            \n\n\n\n\n            \n                \n                    Receive a algorand valid address and asaId then return the optInState\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Algodv2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                                \n                                    asaId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : boolean\n\n                    \n                \n            \n        \n    \n    src/modules/metadata.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getAndDecodeNote\n                        \n                    \n                \n            \n            \n                \ngetAndDecodeNote(txRecord)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Optional\n                                \n                            \n                            \n                                \n                                    txRecord\n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAsaCreationTx\n                        \n                    \n                \n            \n            \n                \ngetAsaCreationTx(indexer: Indexer, assetId: number)\n                \n            \n\n\n\n\n            \n                \n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    indexer\n                                    \n                                            Indexer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    assetId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAssetIdByMetadataHash\n                        \n                    \n                \n            \n            \n                \ngetAssetIdByMetadataHash(client: Algodv2, hashKey: string, creator: string)\n                \n            \n\n\n\n\n            \n                \n                    Lookup an asset id using the metadataHash if the asset have one\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                            Algodv2\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    hashKey\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                                \n                                    creator\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getAssetMetadata\n                        \n                    \n                \n            \n            \n                \ngetAssetMetadata(indexer: Indexer, assetId: number)\n                \n            \n\n\n\n\n            \n                \n                    Returns the metadata stored in the creation tx of an asa\nUsing the ARC-69 standard for NFT metadata.\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    indexer\n                                    \n                                            Indexer\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Indexer\n\n                                    \n                                \n                                \n                                    assetId\n                                    \n                                                number\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : number\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : string\n\n                    \n                \n            \n        \n    \n    src/modules/accounts.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        getBalanceAlgos\n                        \n                    \n                \n            \n            \n                \ngetBalanceAlgos(client, address: string)\n                \n            \n\n\n\n\n            \n                \n                    Receive a algorand valid address and return the amount of algos that account holds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getBalanceMicroalgos\n                        \n                    \n                \n            \n            \n                \ngetBalanceMicroalgos(client, address: string)\n                \n            \n\n\n\n\n            \n                \n                    Receive a algorand valid address and return the amount of microalgos that account holds\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        getMinBalance\n                        \n                    \n                \n            \n            \n                \ngetMinBalance(client, address: string)\n                \n            \n\n\n\n\n            \n                \n                    Receive an address and return the minimum balance necessaries\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    client\n                                    \n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : Algodv2\n\n                                    \n                                \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                    \n                        Returns :     Promise\n\n                    \n                    \n                        : number\n\n                    \n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    \n                        validateAddress\n                        \n                    \n                \n            \n            \n                \nvalidateAddress(address: string)\n                \n            \n\n\n\n\n            \n                \n                    Receive an string, return true if it is a valid Algorand address\n\n\n                    \n                        Parameters :\n                        \n                        \n                            \n                                \n                                    Name\n                                    Type\n                                    Optional\n                                    Description\n                                \n                            \n                            \n                                \n                                    address\n                                    \n                                                string\n                                    \n\n                                    \n                                        No\n                                    \n\n\n                                    \n                                        : string\n\n                                    \n                                \n                            \n                        \n                    \n                    \n                    \n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"index.html":{"url":"index.html","title":"overview - index","body":"\n                   \n\n\n\n    Overview\n\n    \n\n    \n    \n\n\n \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"modules.html":{"url":"modules.html","title":"modules - modules","body":"\n                   \n\n\n\n\n    Modules\n\n\n    \n    \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"properties.html":{"url":"properties.html","title":"package-properties - properties","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n    \n        Properties\n    \n    \n        \n            Version : 1.0.0\n        \n            Description : An algorand reader for blockchain\n        \n            License : MIT\n        \n            Author : ernesthope.algo\n    \n\n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/typealiases.html":{"url":"miscellaneous/typealiases.html","title":"miscellaneous-typealiases - typealiases","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Type aliases\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            Asset   (src/.../types.ts)\n                        \n                        \n                            AssetInfo   (src/.../types.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/modules/common/types.ts\n    \n    \n        \n            \n                \n                    \n                    Asset\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n    \n        \n            \n                \n                    \n                    AssetInfo\n                \n            \n            \n                \n                        literal type\n\n                \n            \n        \n    \n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"},"miscellaneous/variables.html":{"url":"miscellaneous/variables.html","title":"miscellaneous-variables - variables","body":"\n                   \n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n  Miscellaneous\n  Variables\n\n\n\n    Index\n    \n        \n            \n                \n                    \n                        \n                            address   (src/.../testConfig.ts)\n                        \n                        \n                            asaId   (src/.../testConfig.ts)\n                        \n                        \n                            client   (src/.../testConfig.ts)\n                        \n                        \n                            indexer   (src/.../testConfig.ts)\n                        \n                        \n                            nftId   (src/.../testConfig.ts)\n                        \n                        \n                            nftMetadata   (src/.../testConfig.ts)\n                        \n                        \n                            nonBalAddress   (src/.../testConfig.ts)\n                        \n                        \n                            nonValidAddress   (src/.../testConfig.ts)\n                        \n                        \n                            testId   (src/.../testConfig.ts)\n                        \n                    \n                \n            \n        \n    \n\n\n    src/test/testConfig.ts\n    \n        \n        \n            \n                \n                    \n                    \n                        address\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'SXPXEGTVZBIU56NDZC6HA3HZVHAD7CSYECQ2RIKYLMB6KOG43K7UBRGFPI'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        asaId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 113619241\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        client\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new algosdk.Algodv2(\n  '',\n  'https://testnet-api.algonode.cloud',\n  '443'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        indexer\n                        \n                    \n                \n            \n                \n                    \n                        Default value : new algosdk.Indexer(\n  '',\n  'https://testnet-idx.algonode.cloud',\n  '443'\n)\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 117345116\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nftMetadata\n                        \n                    \n                \n            \n                \n                    \n                        Type :         object\n\n                    \n                \n                \n                    \n                        Default value : {\n  standard: 'arc69',\n  description: 'This is a new asset with ARC-69 standar',\n  mime_type: 'image/png',\n  external_url: '',\n  properties: { Key1: 'Value1', Coolness: 'Alot', Miauness: 'Kinda' },\n}\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nonBalAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'LUFRYS56CGKWKFJ62EMYBLVBRYN2IIWSFNA6JCVZQFH6I3363COEAWLG5I'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        nonValidAddress\n                        \n                    \n                \n            \n                \n                    \n                        Type :         string\n\n                    \n                \n                \n                    \n                        Default value : 'ASJJDJDKADIASASJUASKASASXJKSIA'\n                    \n                \n\n\n        \n    \n    \n        \n            \n                \n                    \n                    \n                        testId\n                        \n                    \n                \n            \n                \n                    \n                        Type :         number\n\n                    \n                \n                \n                    \n                        Default value : 117347664\n                    \n                \n\n\n        \n    \n\n\n\n\n                   \n    \n         results matching \"\"\n        \n    \n    \n        No results matching \"\"\n    \n\n"}}
}
